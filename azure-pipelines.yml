# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main
- dev
variables:
- ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/main') }}:
  - group: prod-mhpp-variables
  - group: prod-kbf-run-variables
- ${{ if ne(variables['Build.SourceBranch'], 'refs/heads/main') }}:
  - group: dev-mhpp-variables
  - group: dev-kbf-run-variables
  
  
stages:
- stage: 'CI'
  displayName: 'Build and Push'
  jobs:
  - job: 'Build'
    displayName: 'Build job'
    pool:
      vmImage: ubuntu-latest
    strategy:
      matrix:
        Python37:
          python.version: '3.7'

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
      displayName: 'Use Python $(python.version)'

    - script: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      displayName: 'Install dependencies'

    - task: GoogleCloudSdkInstaller@0
      inputs:
        version: '306.0.0'

    - task: DownloadSecureFile@1
      name: gcsServiceAccount
      displayName: 'Download GCS Service Account'
      inputs:
        secureFile: 'facileai-dev-522ebf9e0a01.json'

    - task: GcloudRunner@0
      inputs:
        command: 'auth activate-service-account'
        arguments: '--key-file $(gcsServiceAccount.secureFilePath)'
      displayName: 'gcloud auth activate-service-account'

    - task: GsutilRunner@0
      inputs:
        command: 'cp'
        arguments: '$(jobdir.path)/$(kbf.run.id)/$(model.name) .'
      displayName: 'gsutil download $(model.name)'
      
    - task: GsutilRunner@0
      inputs:
        command: 'cp'
        arguments: '$(jobdir.path)/$(kbf.run.id)/$(data.proc.name) .'
      displayName: 'gsutil download $(data.proc.name)'

    - script: |
        ls -l .
      displayName: 'List files'

    - script: |
        pip install pytest pytest-azurepipelines
        pytest
      displayName: 'pytest'
      
    - task: CmdLine@1
      displayName: 'Lock image version in deployment.yaml'
      inputs:
        filename: /bin/bash
        arguments: '-c "awk ''{gsub(\"MELBOURNE_HOUSE_PRICING_PREDICTION_IMAGE\", \"gcr.io/$(docker.image.name):$(Build.BuildId)\", $0); print}'' deployment.yaml > $(Build.ArtifactStagingDirectory)/deployment.yaml"'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

    - task: Docker@2
      inputs:
        containerRegistry: 'facileai-dev-gcr'
        repository: '$(docker.image.name)'
        command: 'buildAndPush'
        Dockerfile: 'dockerfile'
        
- stage: 'Dev'
  displayName: 'Dev'
  dependsOn: 'CI'
  jobs:
  - deployment:
    displayName: 'Deployment to GCP K8s Dev'
    environment: 'facileai-k8s-dev.default'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: replacetokens@3
            inputs:
              rootDirectory: '$(Pipeline.Workspace)/drop'
              targetFiles: 'deployment.yaml'
              tokenPrefix: '{{'
              tokenSuffix: '}}'

          - task: KubernetesManifest@0
            displayName: 'kubectl apply'
            inputs:
              action: 'deploy'
              manifests: |
                $(Pipeline.Workspace)/**/drop/deployment.yaml
                
          


